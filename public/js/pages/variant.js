export default class ProductDetail {
  constructor(variants) {
    console.log("D·ªØ li·ªáu variants:", JSON.stringify(variants, null, 2));
    this.variants = variants;
    this.selectedOptions = { Color: null, Capacity: null }; // S·ª≠ d·ª•ng t√™n thu·ªôc t√≠nh thay v√¨ ID
    this.selectedSkuId = variants[0]?.sku_id || null; // SKU m·∫∑c ƒë·ªãnh
    this.init();
  }

  init() {
    this.cacheDom();
    this.bindEvents();
    this.selectDefaultVariant();
  }

  cacheDom() {
    this.mainImage = document.getElementById("main-product-image");
    this.thumbnailButtons = document.querySelectorAll(".product-detail__thumbnail");
    this.optionButtons = document.querySelectorAll(".product-detail__option-btn");
    this.priceCurrent = document.querySelector(".product-detail__current-price");
    this.priceOriginal = document.querySelector(".product-detail__original-price");
    this.stockDisplay = document.querySelector(".product-detail__stock");
    this.addToCartBtn = document.querySelector(".product-detail__btn-add-cart");
    this.buyNowBtn = document.querySelector(".button-buy-now");
    this.discountBadge = document.querySelector(".product-detail__discount-badge");
  }

  bindEvents() {
    this.thumbnailButtons.forEach((btn) => {
      btn.addEventListener("click", () => {
        const img = btn.querySelector("img");
        this.mainImage.src = img.dataset.galleryUrl;
        this.thumbnailButtons.forEach((el) => el.classList.remove("product-detail__thumbnail--active"));
        btn.classList.add("product-detail__thumbnail--active");
      });
    });

    this.optionButtons.forEach((btn) => {
      btn.addEventListener("click", () => {
        const optionType = btn.dataset.optionId === "1" ? "Color" : "Capacity";
        let value = btn.dataset.value.toLowerCase();
        console.log("Option type:", optionType, "Value:", value);

        this.selectedOptions[optionType] = value;

        document.querySelectorAll(`.product-detail__option-btn[data-option-id="${btn.dataset.optionId}"]`).forEach((el) => el.classList.remove("product-detail__color-btn--active", "product-detail__capacity-btn--active"));
        btn.classList.add(btn.dataset.optionId === "1" ? "product-detail__color-btn--active" : "product-detail__capacity-btn--active");

        const matchedVariant = this.variants.find((variant) => {
          if (!variant.attributes) return false;

          // Ki·ªÉm tra n·∫øu user ƒë√£ ch·ªçn h·∫øt t·∫•t c·∫£ attribute c·ªßa variant n√†y
          const allAttributesSelected = variant.attributes.every((attr) => this.selectedOptions[attr.attribute_name] !== undefined);
          if (!allAttributesSelected) return false;

          // So s√°nh t·ª´ng gi√° tr·ªã ƒë√£ ch·ªçn
          return variant.attributes.every((attr) => {
            const selectedValue = this.selectedOptions[attr.attribute_name];
            const variantValue = attr.option_value.toLowerCase();
            return selectedValue === variantValue;
          });
        });

        this.selectedSkuId = matchedVariant ? matchedVariant.sku_id : this.variants[0].sku_id;
        console.log("Bi·∫øn th·ªÉ ƒë∆∞·ª£c ch·ªçn:", matchedVariant);

        this.updateVariantDisplay();
      });
    });
  }

  selectDefaultVariant() {
    const defaultVariant = this.variants[0];
    if (defaultVariant && defaultVariant.attributes) {
      defaultVariant.attributes.forEach((attr) => {
        this.selectedOptions[attr.attribute_name] = attr.option_value;
      });
    }
    this.updateVariantDisplay();
  }

  updateVariantDisplay() {
    console.log("==> B·∫Øt ƒë·∫ßu updateVariantDisplay()");
    console.log("L·ª±a ch·ªçn hi·ªán t·∫°i:", this.selectedOptions);
    console.log("SKU ID hi·ªán t·∫°i:", this.selectedSkuId);

    const variant = this.variants.find((v) => v.sku_id === this.selectedSkuId);
    if (!variant) {
      console.error("‚ùå Kh√¥ng t√¨m th·∫•y bi·∫øn th·ªÉ v·ªõi sku_id:", this.selectedSkuId);
      return;
    }

    console.log("‚úÖ Bi·∫øn th·ªÉ t√¨m th·∫•y:", variant);
    console.log("·∫¢nh c·ªßa bi·∫øn th·ªÉ:", variant.images);

    // C·∫≠p nh·∫≠t gi√°
    this.priceCurrent.textContent = new Intl.NumberFormat("vi-VN", { style: "currency", currency: "VND" }).format(variant.price_discount);
    this.priceOriginal.textContent = variant.discount_percent ? new Intl.NumberFormat("vi-VN", { style: "currency", currency: "VND" }).format(variant.price_original) : "";

    // C·∫≠p nh·∫≠t badge gi·∫£m gi√°
    const discountBadge = document.querySelector(".product-detail__discount-badge");
    if (variant.discount_percent && Number(variant.discount_percent) > 0) {
      discountBadge.textContent = `-${variant.discount_percent}%`;
      discountBadge.style.display = "block";
    } else {
      discountBadge.style.display = "none";
    }

    // C·∫≠p nh·∫≠t t·ªìn kho v√† n√∫t h√†nh ƒë·ªông
    if (this.stockDisplay) this.stockDisplay.textContent = `C√≤n ${variant.stock_quantity} s·∫£n ph·∫©m`;
    if (this.addToCartBtn) this.addToCartBtn.setAttribute("data-sku-id", variant.sku_id);
    if (this.buyNowBtn) this.buyNowBtn.setAttribute("data-sku-id", variant.sku_id);

    // C·∫≠p nh·∫≠t ·∫£nh ch√≠nh
    let defaultImage = variant.images.length > 0 ? variant.images[0] : null;
    if (defaultImage && defaultImage.gallery_url) {
      this.mainImage.src = defaultImage.gallery_url;
      console.log("üñºÔ∏è ·∫¢nh ch√≠nh c·∫≠p nh·∫≠t:", defaultImage.gallery_url);
    } else {
      console.warn("‚ö†Ô∏è Kh√¥ng c√≥ ·∫£nh h·ª£p l·ªá trong bi·∫øn th·ªÉ, gi·ªØ ·∫£nh hi·ªán t·∫°i:", this.mainImage.src);
    }

    // C·∫≠p nh·∫≠t c√°c thumbnail
    const thumbnailContainer = document.querySelector("#thumbnail-container");
    if (thumbnailContainer) {
      thumbnailContainer.innerHTML = ""; // X√≥a c√°c thumbnail hi·ªán t·∫°i
      variant.images.forEach((img, index) => {
        const thumbnailDiv = document.createElement("div");
        thumbnailDiv.classList.add("product-detail__thumbnail");
        if (index === 0) thumbnailDiv.classList.add("product-detail__thumbnail--active");

        const imgEl = document.createElement("img");
        imgEl.src = img.thumbnail_url;
        imgEl.dataset.galleryUrl = img.gallery_url;
        imgEl.alt = "Thumbnail";

        thumbnailDiv.appendChild(imgEl);
        thumbnailContainer.appendChild(thumbnailDiv);

        imgEl.addEventListener("click", () => {
          this.mainImage.src = img.gallery_url;
          document.querySelectorAll(".product-detail__thumbnail").forEach((el) => el.classList.remove("product-detail__thumbnail--active"));
          thumbnailDiv.classList.add("product-detail__thumbnail--active");
        });
      });
    } else {
      console.error("‚ùå Kh√¥ng t√¨m th·∫•y container thumbnail!");
    }

    console.log("==> K·∫øt th√∫c updateVariantDisplay()");
  }
}
